name: Compile Android libsodium binaries

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - packages/sodium_libs/libsodium_version.dart
      - .github/workflows/android_libsodium.yaml

env:
  libsodium_signing_key: RWQf6LRCGA9i53mlYecO4IzT51TGPpvWucNSCh1CBM0QTaLn73Y7GFO3

jobs:
  extract_version:
    name: Extract the libsodium version to build for
    runs-on: ubuntu-latest
    outputs:
      libsodium_version: ${{ steps.version.outputs.version }}
    steps:
      - name: Install Flutter-SDK
        uses: subosito/flutter-action@v1
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Restore sodium_libs
        run: flutter pub get
        working-directory: packages/sodium_libs
      - id: version
        name: Prepare libsodium version
        run: |
          set -e
          version=$(dart run libsodium_version.dart | jq -r .ffi)
          echo "::set-output name=version::$version"
        working-directory: packages/sodium_libs

  build:
    name: Build libsodium.so
    needs:
      - extract_version
    strategy:
      fail-fast: true
      matrix:
        architecture:
          - arm64-v8a
          - armeabi-v7a
          - x86_64
          - x86
        include:
          - architecture: arm64-v8a
            buildTarget: armv8-a
          - architecture: armeabi-v7a
            buildTarget: armv7-a
          - architecture: x86_64
            buildTarget: x86_64
          - architecture: x86
            buildTarget: x86
    runs-on: ubuntu-latest
    steps:
      - name: Install minisign
        run: |
          sudo add-apt-repository -y ppa:dysfunctionalprogramming/minisign
          sudo apt-get -qq update
          sudo apt-get -qq install minisign
      - id: download
        name: Download sources
        run: |
          set -e
          archive_name="libsodium-${{ needs.extract_version.outputs.libsodium_version }}-stable.tar.gz"
          base_url="https://download.libsodium.org/libsodium/releases/$archive_name"
          wget "$base_url"
          wget "$base_url.minisig"
          echo "::set-output name=archive::$archive_name"
      - name: Verify signature
        run: minisign -P ${{ env.libsodium_signing_key }} -Vm "${{ steps.download.outputs.archive }}"
      - name: Extract sources
        run: tar -xavf "${{ steps.download.outputs.archive }}"
      - name: Build libsodium.so
        run: "./dist-build/android-${{ matrix.buildTarget }}.sh"
        working-directory: libsodium-stable
        env:
          LIBSODIUM_FULL_BUILD: 1
      - name: Copy lib to upload dir
        run: |
          set -e
          mkdir upload
          cp libsodium-stable/libsodium-android-*/lib/libsodium.so upload/
      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.architecture }}
          path: upload
          if-no-files-found: error

  release:
    name: Create release
    needs:
      - extract_version
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download all binary artifacts
        uses: actions/download-artifact@v2
        with:
          path: libsodium-android
      - name: Create combined archive
        run: tar -czvf ../libsodium-android.tar.gz .
        working-directory: libsodium-android
      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: libsodium-binaries/android/v${{ needs.extract_version.outputs.libsodium_version }}
          name: "[INTERNAL] Precompiled libsodium android binaries v${{ needs.extract_version.outputs.libsodium_version }}"
          body: Internal release of precompiled android binaries, required for the sodium_libs android plugin.
          prerelease: true
          files: libsodium-android.tar.gz
          fail_on_unmatched_files: true
