name: Compile native libsodium binaries

on:
  workflow_dispatch:
    inputs:
      force-rebuild:
        type: boolean
        description: Force a rebuild
        required: false
        default: false
  push:
    branches:
      - main
    paths:
      - packages/sodium_libs/libsodium_version.dart
      - packages/sodium_libs/tool/libsodium/**
      - .github/workflows/libsodium.yaml
  schedule:
    - cron: "47 2 * * 2"

jobs:
  detect_modified:
    name: Check if binaries need to be updated
    runs-on: ubuntu-latest
    outputs:
      modified: ${{ steps.check.outputs.modified }}
      version: ${{ steps.check.outputs.version }}
      last-modified-content: ${{ steps.check.outputs.last-modified-content }}
    steps:
      - name: Install Flutter-SDK (stable)
        uses: subosito/flutter-action@v2
        with:
          cache: true
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install dart dependencies
        run: dart pub get
        working-directory: packages/sodium_libs
      - id: check
        name: Check if upstream stable archives have been update
        run: dart run tool/libsodium/detect_modified.dart
        working-directory: packages/sodium_libs

  build:
    name: Update binaries if required
    needs:
      - detect_modified
    if: needs.detect_modified.outputs.modified == 'true' || inputs.force-rebuild
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux_aarch64
          - linux_x86_64
          - android_arm64-v8a
          - android_arm64-v8a
          - android_armeabi-v7a
          - android_x86_64
          - android_x86
          - ios
          - ios_simulator
          - macos
          - windows

        include:
          - platform: ios
            runs-on: macos-latest
          - platform: ios_simulator
            runs-on: macos-latest
          - platform: macos
            runs-on: macos-latest
    runs-on: ${{ matrix.runs-on || 'ubuntu-latest' }}
    steps:
      - name: Install Flutter-SDK (stable)
        uses: subosito/flutter-action@v2
        with:
          cache: true
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install minisign
        uses: ./.github/actions/install-minisign
      - name: Install dart dependencies
        run: dart pub get
        working-directory: packages/sodium_libs
      - name: Build libsodium binaries
        run: dart run tool/libsodium/build.dart ${{ matrix.platform }}
        working-directory: packages/sodium_libs
      - name: Create artifact
        uses: actions/upload-artifact@v3
        with:
          name: libsodium-${{ matrix.platform }}
          path: ${{ runner.temp }}/libsodium-${{ matrix.platform }}
          if-no-files-found: error
          retention-days: 1

  update_release:
    name: Update release with new binaries
    needs:
      - detect_modified
      - build
    if: needs.detect_modified.outputs.modified == 'true' || inputs.force-rebuild
    runs-on: macos-latest # needed for lipo
    permissions:
      contents: write
    steps:
      - name: Install Flutter-SDK (stable)
        uses: subosito/flutter-action@v2
        with:
          cache: true
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install minisign
        uses: ./.github/actions/install-minisign
      - name: Install dart dependencies
        run: dart pub get
        working-directory: packages/sodium_libs
      - name: Download all binary artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Create secret key for minisign
        run: echo '${{ secrets.MINISIGN_SECRET_KEY }}' > '${{ runner.temp }}/minisign.key'
      - name: Build release archives
        run: dart run tool/libsodium/publish.dart
        working-directory: packages/sodium_libs
      - name: Cleanup minisign key
        if: always()
        run: rm -f '${{ runner.temp }}/minisign.key'
      - name: Create or update release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: libsodium-binaries/v${{ needs.detect_modified.outputs.version }}
          name: "[INTERNAL] Precompiled libsodium binaries v${{ needs.detect_modified.outputs.version }}"
          body: Internal release of precompiled libsodium binaries, required for the sodium_libs package.
          prerelease: true
          files: publish/*
          fail_on_unmatched_files: true

  update_last_modified:
    name: Update last-modified.txt
    needs:
      - detect_modified
      - update_release
    if: needs.detect_modified.outputs.modified == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Install Flutter-SDK (stable)
        uses: subosito/flutter-action@v2
        with:
          cache: true
      - name: Install cider
        run: dart pub global activate cider
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Update last-modified.txt
        run: |
          cat << 'EOF' > tool/libsodium/.last-modified.txt
          ${{ needs.detect_modified.outputs.last-modified-content }}
          EOF
        working-directory: packages/sodium_libs
      - name: Update changelog and bump build number
        run: |
          set -eo pipefail
          dart pub global run cider log changed 'Update embedded libsodium binaries'
          dart pub global run cider bump build
          dart pub global run cider release
        working-directory: packages/sodium_libs
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: Update last-modified.txt
          branch: last-modified-${{ github.run_id }}
          delete-branch: true
          title: Update last-modified.txt to reflect upstream changes
          body: |
            Upstream archives for libsodium v${{ needs.detect_modified.outputs.version }} have changed.
            The new timestamps are:

            ```
            ${{ needs.detect_modified.outputs.last-modified-content }}
            ```
          token: ${{ secrets.GH_PAT }}
